'''
Created on Jun 11, 2023

@author: ejiwu
'''
from pickle import TRUE

#Function to print Tic Tac Toe Board 
def print_ttt_board(values):
    print("\n")
    print("\t    |    |")
    print("\t  {} | {}  | {}".format(values[0], values[1], values[2]))
    print("\t____|____|____")
    
    print("\t    |    |")
    print("\t  {} | {}  | {}".format(values[3], values[4], values[5]))
    print("\t____|____|____")
    
    print("\t    |    |")
    print("\t  {} | {}  | {}".format(values[6], values[7], values[8]))
    print("\t____|____|____")

#Function to print the scoreboard for the game
def print_scoreboard(score_board):
    print("\t_________________________________")
    print("\t    GAME SCOREBOARD            ")
    print("\t_________________________________")
    
    players = list(score_board.keys())
    print("\t    ", players[0], "\t    ", score_board[players[0]])
    print("\t    ", players[1], "\t    ", score_board[players[1]])
    
    print("\t_________________________________")
    
#Function to check if any player has won a game 
def check_winner(player_position, current_player):
    
    #All possible winning combinations for players
    sol = [[1,2,3], [1,4,7], [1,5,9], [2,5,8], [3,6,9], [4,5,6], [7,8,9], [3,5,7]]
    
    #Loop to check if any winning combination is satisfied in the iteration
    for x in sol:
        if all(y in player_position[current_player] for y in x):
            return True 
    #return false if the combination is not satisfie     
    return False
        
#Function to check if game is a draw
def check_draw(player_position):
    if len(player_position['X']) + len(player_position['O']) ==9:
        return True 
    return False

#Function for a single tic tac toe game
def single_game(current_player):
    values = [' ' for x in range(9)]
    
    #stores the position occupied by X and O
    player_position = {'X':[], 'O':[]}
    
    #game loop for a single game 
    while True:
        print_ttt_board(values)
        
        #exception for MOVE input
        try:
            print("Player", current_player, "turn. Which box?:", end ="")
            move = int(input())
        except ValueError:
            print("Wrong Input. Cell position is from 1 - 9 Try Again!")
            continue
        
        #check MOVE input
        if move < 1 or move > 9:
            print("Please choose the right number between 1 to 9")
            continue
        
        #Check if the cell is occupied
        if values[move-1] != " ":
            print("This space is occupied. Select another!")
            continue
        
        #Update game status
        
        #Updating board status
        values[move-1] = current_player
        
        #Updating player positions
        player_position[current_player].append(move)
        
        #Call function for checking winner
        if check_winner(player_position, current_player):
            print_ttt_board(values)
            print("Player ", current_player, " has won the game!")
            print("\n")
            return current_player
        
        #Call function for checking draw
        if check_draw(player_position):
            print_ttt_board(values)
            print("Game is a Draw")
            print("\n")
            return 'D'
        #Switching player moves
        if current_player == 'X':
            current_player = 'O'
        else:
            current_player = 'X'
            
    
if __name__ == '__main__':
    
    print("Player 1 Details")
    play1 = input("Enter the name of the Player :")
    print("\n")
    
    print("Player 2 Details")
    play2 = input("Enter the name of the Player :")
    print("\n")
    
    #store the player who chooses X and O 
    current_player = play1
    
    #store the choice of player character
    player_choice = {'X': "",'O': ""}
    
    #store the options
    options = ['X', 'O']
    
    #store the scoreboard details
    score_board = {play1: 0, play2: 0}
    print_scoreboard(score_board)
    
    #Loop game until either player chooses to quit
    while True:
        
        #Player choice menu
        print("Turn to choose for ", current_player)
        print("Enter 1 for X")
        print("Enter 2 for O")
        print("Enter 3 to Quit")
        
        #exception for CHOICE input
        try:
            choice = int(input())
        except ValueError:
            print("Wrong Input. Try Again!")
            continue
        
        #Conditions for player choice
        if choice == 1:
            player_choice['X'] = current_player
            if current_player == play1:
                player_choice['O'] = play2
            else:
                player_choice['O'] = play1
        elif choice == 2:
            player_choice['O'] = current_player
            if current_player == play1:
                player_choice['X'] = play2
            else:
                player_choice['X'] = play1
                
        elif choice == 3:
            print("Final Scores")
            print_scoreboard(score_board)
            break 
        else:
            print("Wrong Choice. Try Again!")
            
        #Stores the winner in a single game 
        winner = single_game(options[choice-1])
        
        #Edit scoreboard according to winner
        if winner != 'D':
            player_won = player_choice[winner]
            score_board[player_won] = score_board[player_won] + 1
                 
             
        print_scoreboard(score_board)
        #Switch player who chooses X or O
        if current_player == play1:
            current_player = play2
        else:
            current_player = play1
             
        
        
            
    
